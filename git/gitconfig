[log]
    # Define a list of colors for git log --graph to cycle through
    graphColors = blue,green,yellow,red,magenta,cyan

[alias]
    adog = log --all --decorate --oneline --graph
    adoga = log --all --decorate --oneline --graph --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ar%C(reset) - %C(bold green)%an%C(reset) %s%C(reset)'
    adogab = log --all --decorate --oneline --graph --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold green)%an%C(reset) - %C(bold cyan)%D%C(reset) %s'
    adogab = log --all --decorate --oneline --graph --color=always --pretty=format:'%C(auto,bold)%h%C(reset) - %C(bold green)%an%C(reset) - %C(auto,bold)%D%C(reset) %s'
    tree = "! ~/.config/git/gitforest.sh --pretty=format:\"%C(red)%h %C(magenta)(%ar) %C(blue)%an %C(reset)%s\" --style=15 --reverse"
    status-tree = "!f() { git status --porcelain | awk \"{print substr(\\$0, 4)}\" | sed \"s/^\\\"//; s/\\\"$//\" | xargs -I {} dirname \"{}\" | sort | uniq | xargs -I {} tree ${1:--L 2} \"{}\"; }; f"
    push-incremental = git status -s | while IFS= read -r line; do; file=$(echo "$line" | cut -d " " -f 2- | tr -d '"'); git add "$file"; git commit -m "Committing $file"; git push || { git reset --soft HEAD~1; git stash; }; done;


[include]
    path = ./private

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

[pull]
    rebase = false

[push]
    autoSetupRemote = true

[init]
    defaultBranch = main

[core]
    excludesfile = ~/.config/git/gitignore
    sshCommand = "ssh -F ~/.config/ssh/config"


[diff]
    tool = nvimdiff

[difftool]
    prompt = false
    [difftool "nvimdiff"]
        cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""

[merge]
    tool = nvimdiff

[mergetool]
    prompt = true
    [mergetool "nvimdiff"]
        cmd = "nvim -d \"$LOCAL\" \"$MERGED\" \"$REMOTE\" -c 'wincmd w' -c 'wincmd J'"


